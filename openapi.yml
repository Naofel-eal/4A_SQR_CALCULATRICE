swagger: "2.0"
info:
  version: "2.1.2"
  title: "Transaction API"
  description: "API pour enregistrer, afficher et importer des transactions"
  termsOfService: "https://swagger.io/terms/"
  contact:
    email: "support@swagger.io"
host: "localhost:5000"
basePath: "/"
schemes:
  - "http"
paths:
  /add:
    post:
      tags:
        - "Transaction"
      summary: "Enregistrer une transaction"
      description: "Enregistrer une transaction entre deux personnes à une certaine date et pour une certaine valeur"
      operationId: "addTransaction"
      parameters:
        - in: "body"
          name: "body"
          description: "Transaction à enregistrer"
          required: true
          schema:
            type: "object"
            properties:
              P1:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              P2:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              date:
                type: "string"
                format: "date"
              value:
                type: "integer"
      responses:
        200:
          description: "Transaction enregistrée avec succès"
          schema:
            type: "object"
            properties:
              P1:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              P2:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              date:
                type: "string"
                format: "date"
              value:
                type: "integer"
        400:
          description: "Erreur dans la requête"

  /list:
    get:
      tags:
        - "Transaction"
      summary: "Afficher une liste de toutes les transactions"
      description: "Afficher une liste de toutes les transactions dans l'ordre chronologique"
      operationId: "getTransactionList"
      responses:
        200:
          description: "Liste de transactions"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                from:
                  type: "string"
                to:
                  type: "string"
                date:
                  type: "string"
                  format: "date"
                amount:
                  type: "integer"
        400:
          description: "Erreur dans la requête"

  /transactions/{person_id}:
    get:
      tags:
        - "Transaction"
      summary: "Afficher les transactions liées à une personne"
      description: "Afficher une liste de toutes les transactions liées à une personne dans
