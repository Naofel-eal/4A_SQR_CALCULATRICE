swagger: "2.0"
info:
  version: "2.1.2"
  title: "Transaction API"
  description: "API pour enregistrer, afficher et importer des transactions"
  termsOfService: "https://swagger.io/terms/"
  contact:
    email: "support@swagger.io"
host: "localhost:5000"
basePath: "/"
schemes:
  - "http"
paths:
  /:
    get:
      tags:
        - "Home"
      summary: "Accueil"
      description: "Page d'accueil"
      operationId: "home"
      responses:
        '200':
          description: "Allez sur la route /list !"
        '400':
          description: "Erreur dans la requête"
         
  /add:
    post:
      tags:
        - "Transactions"
      summary: "Enregistrer une transaction"
      description: "Enregistrer une transaction entre deux personnes à une certaine date et pour une certaine valeur"
      operationId: "addTransaction"
      parameters:
        - in: "body"
          name: "body"
          description: "Transaction à enregistrer"
          required: true
          schema:
            type: "object"
            properties:
              P1:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              P2:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              date:
                type: "string"
                format: "date"
              value:
                type: "integer"
      responses:
        200:
          description: "Transaction enregistrée avec succès"
          schema:
            type: "object"
            properties:
              P1:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              P2:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              date:
                type: "string"
                format: "date"
              value:
                type: "integer"
        400:
          description: "Erreur dans la requête"

  /list:
    get:
      tags:
        - "Transactions"
      summary: "Afficher une liste de toutes les transactions"
      description: "Afficher une liste de toutes les transactions dans l'ordre chronologique"
      operationId: "getTransactionList"
      responses:
        200:
          description: "Liste de transactions"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                from:
                  type: "string"
                to:
                  type: "string"
                date:
                  type: "string"
                  format: "date"
                amount:
                  type: "integer"
        400:
          description: "Erreur dans la requête"

  /transactions/{person_id}:
    get:
      description: "Afficher une liste de toutes les transactions dans l’ordre chronologique liées à une personne"
      operationId: "transactions_by_person"
      summary: "Afficher une liste de transactions dans l’ordre chronologique pour une personne"
      tags:
        - "Transactions"
      parameters:
        - name: "person_id"
          in: "path"
          required: true
          description: "ID de la personne"
          type: "integer"
      responses:
        200:
          description: "Liste des transactions triées dans l’ordre chronologique pour une personne" 
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                from:
                  type: "string"
                  description: "Nom de la personne qui a effectué la transaction"
                to:
                  type: "string"
                  description: "Nom de la personne à qui la transaction a été effectuée"
                date:
                  type: "string"
                  format: "date"
                  description: "Date de la transaction"
                amount:
                  type: "number"
                  description: "Montant de la transaction"
        400:
          description: "Erreur dans la requête"

  /solde/{id}:
    get:
      description: "Afficher le solde du compte de la personne en fonction de son ID"
      operationId: "show_solde"
      summary: "Afficher le solde du compte de la personne"
      tags:
        - "Solde"
      parameters:
        - in: "path"
          name: "id"
          type: "integer"
          required: true
          description: "ID de la personne"
      responses:
        200:
          description: "Information sur le solde du compte"
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                description: "ID de la personne"
              firstname:
                type: "string"
                description: "Nom de la personne"
              name:
                type: "string"
                description: "Prénom de la personne"
              solde:
                type: "integer"
                description: "Solde de la personne"
        404:
          description: "La personne est introuvable"
          schema:
            type: "object"
            properties:
              error:
                type: "string"
                description: "Error message"

  /csv:
    post:
      tags:
        - "Import CSV Data"
      summary: "Importer des données depuis un fichier csv"
      description: "Importer des données depuis un fichier csv"
      operationId: "uploadCSV"
      produces:
        - "application/json"
      parameters:
        - name: "transactions"
          description: "Fichier csv à importer"
          in: "formData"
          required: true
          type: "file"
      consumes:
        - "multipart/form-data"
      responses:
        200:
          description: "Les transactions ont été importées avec succès"
          schema:
            type: "string"
        400:
          description: "Une erreur s'est produite lors de l'import des transactions"
          

  /checkTransaction:
    post:
      tags:
        - "Transactions"
      summary: "Vérifier la validité d'une transaction"
      description: "Indique si une transaction est valide ou non"
      parameters:
        - name: "data"
          in: "body"
          required: true
          schema:
            type: "object"
            properties:
              P1:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              P2:
                type: "object"
                properties:
                  firstname:
                    type: "string"
                  name:
                    type: "string"
              date:
                type: "string"
              value:
                type: "number"
      responses:
        200:
          description: "TRANSACTION VALIDE"
          schema:
            type: "string"
        400:
          description: "TRANSACTION INVALIDE"
          schema:
            type: "string"

